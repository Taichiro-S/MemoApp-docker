version: "3.9"
volumes:
  db-store:
  psysh-store:
services:
  frontend:
    build:
      context: .
      dockerfile: ./docker/frontend/Dockerfile
    volumes:
    - type: bind
      source: ./src_frontend_react-ts
      target: /workspace
    container_name: frontend-container
    hostname: frontend-server
    ports:
      - "3000:3000"
    environment:
      - CHOKIDAR_USEPOLLING=true
      # - REACT_APP_API_URL=http://web:80

  backend:
    build:
      context: .
      dockerfile: ./docker/backend/Dockerfile
      target: ${APP_BUILD_TARGET:-development}
    volumes:
      - type: bind
        source: ./src_backend_laravel
        target: /workspace
      - type: volume
        source: psysh-store
        target: /root/.config/psysh
        volume:
          nocopy: true
    container_name: backend-container
    hostname: backend-server
    ports:
      - "9000:9000"
    environment:
      - APP_DEBUG=${APP_DEBUG:-true}
      - APP_ENV=${APP_ENV:-local}
      - APP_URL=${APP_URL:-http://localhost}
      - LOG_CHANNEL=${LOG_CHANNEL:-stderr}
      - LOG_STDERR_FORMATTER=${LOG_STDERR_FORMATTER:-Monolog\Formatter\JsonFormatter}
      - DB_CONNECTION=${DB_CONNECTION:-mysql}
      - DB_HOST=${DB_HOST:-db}
      - DB_PORT=${DB_PORT:-3306}
      - DB_DATABASE=${DB_DATABASE:-laravel}
      - DB_USERNAME=${DB_USERNAME:-phper}
      - DB_PASSWORD=${DB_PASSWORD:-secret}
    depends_on:
      - frontend

  web:
    build:
      context: .
      dockerfile: ./docker/web/Dockerfile
    container_name: web-container
    hostname: web-server
    ports:
      - target: 80
        published: ${WEB_PUBLISHED_PORT:-80}
        protocol: tcp
        mode: host
    depends_on:
      - backend
      - frontend
    # volumes:
    #   - type: bind
    #     source: ./src
    #     target: /workspace

  db:
    build:
      context: .
      dockerfile: ./docker/db/Dockerfile
    container_name: db-container
    hostname: db-server
    ports:
      - target: 3306
        published: ${DB_PUBLISHED_PORT:-3306}
        protocol: tcp
        mode: host
    volumes:
      - type: volume
        source: db-store
        target: /var/lib/mysql
        volume:
          nocopy: true
    environment:
      - MYSQL_DATABASE=${DB_DATABASE:-laravel}
      - MYSQL_USER=${DB_USERNAME:-phper}
      - MYSQL_PASSWORD=${DB_PASSWORD:-secret}
      - MYSQL_ROOT_PASSWORD=${DB_PASSWORD:-secret}

  mailhog:
    image: mailhog/mailhog
    container_name: mail-container
    hostname: mail-server
    ports:
      - target: 8025
        published: ${MAILHOG_PUBLISHED_PORT:-8025}
        protocol: tcp
        mode: host